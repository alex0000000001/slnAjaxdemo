
@{
    ViewData["Title"] = "Promise";
}

<h1>Promise</h1>

@section Scripts{ 

    <script>


        //建立Promise物件
        const promise1 = new Promise((resolve, reject) => {
            //非同步的程式碼
            const num = Math.random() > 0.5 ? 1 : 0;
            console.log(num);
            if (num) {
                resolve("成功")
            }
            else {
                reject("失敗")
            }
        })

        // 使用Promise物件

        promise1
            .then((result) => {
                console.log(result);
            })
            .catch((err) => {
                console.log(err);
            })
            .finally(() => {
                console.log("end")
            })






        //==========================================
        function printSomething(data) {
            const promise = new Promise((resolve, reject) => {
                let flag = false;
                if (flag==true) {
                    setTimeout(() => { resolve(data) }, 1000)}
                else {
                    setTimeout(() => { reject("失敗!!!!!") }, 1000)}
            })
            return promise;
        }

        printSomething("A")
            .then((data) => {
                console.log(data);
                return printSomething("B")
            })
            .then((data) => {
                console.log(data);
                return printSomething("C");
            })
            .then((data) => {
                console.log(data);
            })
            .catch((err) => {
                console.log(err);
            });




    </script>


}